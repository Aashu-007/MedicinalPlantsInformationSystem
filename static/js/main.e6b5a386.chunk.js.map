{"version":3,"sources":["firebase.js","components/Authentication/AuthProvider.js","components/Drawer.js","theme.js","components/Searchbar.js","components/Fetch.js","components/FormsUI/Textfield/index.js","components/FormsUI/Button/index.js","components/Footer.js","pages/AddSpecies.js","pages/Contact.js","devs.js","pages/About.js","pages/ErrorPage.js","hooks/useMounted.js","pages/Signup.js","pages/Login.js","components/Doc.js","pages/Plants.js","pages/forgotPswd.js","components/Search.js","components/Charts/BarChart.js","components/Charts/PieChart.js","components/Charts/LineChart.js","Data/PlantLocationData.js","Data/PlantTypesData.js","Data/PartsUsedData.js","Data/PlantHeightData.js","pages/Dashboard.js","components/Authentication/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","auth","firestore","AuthContext","createContext","AuthProvider","children","history","useHistory","useState","user","setUser","useEffect","onAuthStateChanged","Provider","value","logout","signOut","then","push","catch","err","console","log","useStyles","makeStyles","drawer","position","width","height","backgroundColor","green","color","Drawer","useContext","classes","open","setOpen","activeTab","setActiveTab","location","useLocation","pathname","itemsList","text","icon","style","path","AppBar","Toolbar","IconButton","size","edge","aria-label","sx","mr","onClick","Typography","variant","noWrap","component","flexGrow","display","xs","md","ml","emailVerified","Box","sm","fontSize","email","Button","to","textDecoration","onOpen","onClose","List","className","mt","src","alt","Divider","map","item","index","ListItem","button","key","ListItemIcon","ListItemText","primary","m","theme","createTheme","palette","main","optional","grey","secondary","orange","Searchbar","data","placeholder","search","setSearch","autoCompleteOpen","setAutoCompleteOpen","handleSubmitSearch","e","preventDefault","onSubmit","Autocomplete","freeSolo","id","onInputChange","event","reason","disableClearable","options","option","LocalName","maxWidth","boxShadow","renderInput","params","TextField","InputProps","type","endAdornment","InputAdornment","scroll","borderRadius","right","bottom","GetData","plantData","setPlantData","modal","setModal","loading","setLoading","page","setPage","database","ref","on","response","val","PlantsInfo","ImgUrl","ScientificName","Distribution","PartsUsed","Uses","Types","Location","Container","mx","zIndex","bgcolor","pt","pb","DataSearch","disableGutters","px","py","justifyContent","CircularProgress","Grid","container","spacing","slice","lg","Card","minWidth","raised","CardActionArea","CardMedia","image","CardContent","gutterBottom","top","left","CardActions","onOpenModal","center","fontWeight","fontStyle","Pagination","count","length","toFixed","onChange","_","window","smooth","TextfieldWrapper","name","otherProps","useField","field","meta","configTextField","fullWidth","touched","error","helperText","ButtonWrapper","submitForm","useFormikContext","configButton","footer","marginTop","textAlign","para","padding","Footer","INITIAL_FORM_STATE","Description","FORM_VALIDATION","Yup","shape","required","min","handleAddPlant","values","onSubmitProps","setSubmitting","resetForm","toast","success","AddSpecies","p","role","initialValues","validationSchema","autoComplete","Textfield","label","multiline","rows","FName","LName","Email","Message","handleSendMsg","Contact","Chip","devs","img","description","ln","git","fb","tw","yt","About","mb","CardHeader","title","disableSpacing","ErrorPage","useMounted","mounted","useRef","current","password","confirmPassword","oneOf","Signup","setError","notify","handleSubmit","signup","a","createUserWithEmailAndPassword","userCred","sendEmailVerification","message","border","borderColor","pl","Alert","severity","startIcon","disabled","float","Login","login","signInWithEmailAndPassword","setTimeout","styles","StyleSheet","create","marginBottom","subtitle","imgBorder","box","Doc","Plants","useParams","get","snapshot","exists","goBack","document","filename","objectFit","href","WikiLink","target","rel","wordWrap","ForgotPswd","frgtPswd","sendPasswordResetEmail","url","res","Search","setData","Query","URLSearchParams","orderByChild","equalTo","Object","keys","BarChart","chartData","maintainAspectRatio","PieChart","PlantLocationData","PlantTypesData","PartsUsedData","PlantHeightData","Dashboard","labels","District","datasets","NoOfPlants","borderWidth","plantLocData","Type","Count","plantTypeData","Part","partUsedData","Height","plantHeightData","Paper","LineChart","ProtectedRoute","Component","restProps","render","props","App","ThemeProvider","exact","exaxt","Explore","forgotPswd","Error","Boolean","hostname","match","ReactDOM","StrictMode","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6b5a386.chunk.js","sourcesContent":["\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC11wdWy8TYsTJDVlK3BWnOIbjbCf49SWk\",\r\n  authDomain: \"mpis-mini.firebaseapp.com\",\r\n  databaseURL: \"https://mpis-mini-default-rtdb.firebaseio.com\",\r\n  projectId: \"mpis-mini\",\r\n  storageBucket: \"mpis-mini.appspot.com\",\r\n  messagingSenderId: \"751873622896\",\r\n  appId: \"1:751873622896:web:10d6379dcb3e7a1274c5b5\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nexport { auth, db };\r\nexport default firebase;","import React,{createContext,useEffect,useState} from 'react';\r\nimport {auth} from '../../firebase'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst [user, setUser] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\tauth.onAuthStateChanged((user) => {\r\n\t\t\tsetUser(user);\r\n\t\t});\r\n\t}, [])\r\n\r\n\tconst logout = () => {\r\n\t\tauth.signOut().then(()=>{\r\n\t\t\tsetUser(null)\r\n\t\t\thistory.push(\"/login\")\r\n\t\t}).catch((err) =>{\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\t}\r\n\r\n\treturn <AuthContext.Provider value={{user, logout}}>\r\n\t{children}\r\n\t</AuthContext.Provider>\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport TravelExploreIcon from '@mui/icons-material/TravelExplore';\r\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  SwipeableDrawer as MUIDrawer,\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  Button\r\n} from \"@mui/material\";\r\nimport green from \"@mui/material/colors/green\";\r\n\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { Link, useLocation} from \"react-router-dom\";\r\nimport { AuthContext } from \"../components/Authentication/AuthProvider\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  drawer: {\r\n    position: \"absolute\",\r\n    width: \"220px\",\r\n    height: \"100%\",\r\n    backgroundColor: green[900],\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst Drawer = () => {\r\n\r\n  const { user,logout } = useContext(AuthContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [activeTab, setActiveTab] = useState(\"Home\");\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/\") {\r\n      setActiveTab(\"Home\");\r\n    } else if (location.pathname === \"/explorespecies\") {\r\n      setActiveTab(\"Explore Plants\");\r\n    } else if (location.pathname === \"/addspecies\") {\r\n      setActiveTab(\"Add New Species\");\r\n    } else if (location.pathname === \"/contact\") {\r\n      setActiveTab(\"Contact Us\");\r\n    } else if (location.pathname === \"/about\") {\r\n      setActiveTab(\"About\");\r\n    }\r\n  }, [location]);\r\n\r\n  const handleMenuClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon style={{ color: green[50] }} />,\r\n      path: \"/\",\r\n    },\r\n     {\r\n      text: \"Explore Plants\",\r\n      icon: <TravelExploreIcon style={{ color: green[50] }} />,\r\n      path: \"/explorespecies\",\r\n    },\r\n    {\r\n      text: \"Add New Species\",\r\n      icon: <AddBoxIcon style={{ color: green[50] }} />,\r\n      path: \"/addspecies\",\r\n    },\r\n    {\r\n      text: \"Contact Us\",\r\n      icon: <MailIcon style={{ color: green[50] }} />,\r\n      path: \"/contact\",\r\n    },\r\n    {\r\n      text: \"About\",\r\n      icon: <InfoIcon style={{ color: green[50] }} />,\r\n      path: \"/about\",\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      {/*<Box sx={{ flexGrow: 1 }}>*/}\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => handleMenuClick()}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", md: \"block\" }, ml: -1 }}\r\n          >\r\n            Medicinal & Aromatic Plants of Sikkim\r\n          </Typography>\r\n              <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"block\", md: \"none\" }, ml: -1 }}\r\n          >\r\n            MPIS Sikkim\r\n          </Typography>\r\n          {user && user.emailVerified ? (\r\n            <>\r\n            <Box sx={{display:{xs:\"none\",sm:\"block\"}}}>\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{ fontSize: 14 }}\r\n            >\r\n              Hello, {user && user.email} | {\"  \"}\r\n            </Typography>\r\n            </Box>\r\n            <Button \r\n              color=\"inherit\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </>\r\n          ):(  \r\n          <>\r\n          <Button\r\n            color=\"inherit\"\r\n          >\r\n            <Link\r\n              to=\"/login\"\r\n              style={{ textDecoration: \"inherit\", color: \"inherit\" }}\r\n            >\r\n              LOGIN\r\n            </Link>\r\n          </Button>\r\n          </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <MUIDrawer\r\n        open={open}\r\n        onOpen={() => setOpen(true)}\r\n        onClose={() => setOpen(false)}\r\n        variant=\"temporary\"\r\n        color=\"primary\"\r\n      >\r\n        <List className={classes.drawer}>\r\n          <Box height={170} sx={{ flexGrow: 1, mt: -1 ,width:\"100%\"}}>\r\n            <img\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/mpis-mini.appspot.com/o/logo.jpg?alt=media&token=440f55c2-31f1-43ce-b383-9adaf679dcee\"\r\n              alt=\"mpis sikkim logo\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Box>\r\n          <Divider variant=\"middle\" />\r\n          {itemsList.map((item, index) => {\r\n            const { text, icon, path } = item;\r\n            return (\r\n              <Link\r\n                to={path}\r\n                style={{ textDecoration: \"inherit\", color: \"inherit\" }}\r\n                onClick={() => setOpen(false)}\r\n              >\r\n                <p\r\n                  className={`${activeTab === text ? \"active\" : \"\"}`}\r\n                  onClick={() => setActiveTab(text)}\r\n                >\r\n                  <ListItem button key={text}>\r\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </p>\r\n              </Link>\r\n            );\r\n          })}\r\n        </List>\r\n        {user && user.emailVerified ? (\r\n          <Typography variant=\"body1\" sx={{fontSize:12,m:\"auto\",display:{xs:\"block\",sm:\"none\"}}}>{user.email}</Typography>\r\n          ):(\"\")}\r\n      </MUIDrawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import { createTheme } from \"@mui/material/styles\";\r\nimport orange from \"@mui/material/colors/orange\";\r\nimport green from \"@mui/material/colors/green\";\r\nimport grey from \"@mui/material/colors/grey\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[800],\r\n      optional: grey[100]\r\n    },\r\n    secondary: {\r\n      main: orange[600],\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React, { useState } from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nconst Searchbar = ({ data, placeholder }) => {\r\n\r\n\r\n\tlet [search, setSearch] = useState(\"\");\r\n\tconst [autoCompleteOpen, setAutoCompleteOpen] = useState(false);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleSubmitSearch = (e) => {\r\n\t\te.preventDefault();\r\n\t\thistory.push(`/search?query=${search}`);\r\n\t\tsetSearch(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmitSearch}>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tfreeSolo\r\n\t\t\t\t\tid=\"free-solo-2-demo\"\r\n\t\t\t\t\topen={autoCompleteOpen}\r\n\t\t\t\t\tonInputChange={(event, value, reason) => {\r\n\t\t\t\t\t\tsetSearch(value);\r\n\t\t\t\t\t\t// console.log(\"consoled search\", search);\r\n\t\t\t\t\t\tswitch (reason) {\r\n\t\t\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\t\t\tsetAutoCompleteOpen(!!value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"reset\":\r\n\t\t\t\t\t\t\tcase \"clear\":\r\n\t\t\t\t\t\t\t\tsetAutoCompleteOpen(false);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.log(reason);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisableClearable\r\n\t\t\t\t\toptions={data.map((option) => option.LocalName)}\r\n\t\t\t\t\tsx={{ maxWidth: 500, m: \"auto\", boxShadow: 5 }}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\t\t\ttype: \"search\",\r\n\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick={handleSubmitSearch} aria-label=\"search\">\r\n\t\t\t\t\t\t\t\t\t\t\t<SearchRoundedIcon />\r\n\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport firebase from \"../firebase.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LocationOnRoundedIcon from \"@mui/icons-material/LocationOnRounded\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport theme from \"../theme\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport DataSearch from \"../DataSearch.json\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nconst style = {\r\n\tscroll: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tborderRadius: 30,\r\n\t\tright: 15,\r\n\t\tbottom: 15,\r\n\t},\r\n};\r\n\r\nconst GetData = () => {\r\n\tconst [plantData, setPlantData] = useState([]);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [modal, setModal] = useState({});\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [page, setPage] = useState(1)\r\n\r\n\tconst onOpenModal = (data) => {\r\n\t\tsetModal(data);\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst onCloseModal = () => setOpen(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tconsole.log(\"Loading 1\",loading)\r\n\t\tconst firestore = firebase.database().ref(\"/PlantDatabase\");\r\n\t\tfirestore.on(\"value\", (response) => {\r\n\t\t\tconst data = response.val();\r\n\t\t\tlet PlantsInfo = [];\r\n\t\t\tfor (let id in data) {\r\n\t\t\t\tPlantsInfo.push({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tImgUrl: data[id].ImgUrl,\r\n\t\t\t\t\tLocalName: data[id].LocalName,\r\n\t\t\t\t\tScientificName: data[id].ScientificName,\r\n\t\t\t\t\tDistribution: data[id].Distribution,\r\n\t\t\t\t\tPartsUsed: data[id].PartsUsed,\r\n\t\t\t\t\tUses: data[id].Uses,\r\n\t\t\t\t\tTypes: data[id].Types,\r\n\t\t\t\t\tLocation: data[id].Location,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetPlantData(PlantsInfo);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t\tconsole.log(\"Loading 2\",loading)\r\n\t}, [loading]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container sx={{ mx: 2,position:\"fixed\",zIndex:999}} maxWidth=\"100%\">\r\n\t\t\t\t<Box bgcolor=\"white\" sx={{ pt: 10,mr:4,pb:1 }} m=\"auto\">\r\n\t\t\t\t\t<Searchbar data={DataSearch} placeholder=\"Search..\"/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t\t<Container disableGutters maxWidth={false} sx={{ px: 5, py: 3 }}>\r\n\t\t\t\t<Box component=\"main\" sx={{ flexGrow: 1 ,px:3,pt:17}}>\r\n\t\t\t\t\t{loading ? \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<Box sx={{display:\"flex\",justifyContent:\"center\",maxWidth:\"500\",mt:\"25vh\"}}>\r\n\t\t\t\t\t\t\t\t<CircularProgress color=\"success\" />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={5}>\r\n\t\t\t\t\t\t{plantData.slice((page-1)*16,(page-1)*16+16).map((data, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4} sm={6} lg={3}>\r\n\t\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 275,\r\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth: 150,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"plant\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"180\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timage={data.ImgUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data.LocalName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{position:\"relative\",top:4,left:-2}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LocationOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data.Location}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonOpenModal(data)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/plant/${data.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"inherit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"inherit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRead More\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t{open && setModal != null ? (\r\n\t\t\t\t\t\t\t<Modal open={open} onClose={onCloseModal} center>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t{modal.LocalName}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tLocal Name :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{modal.LocalName}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tScientific Name :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span style={{fontStyle:\"italic\"}}>\r\n\t\t\t\t\t\t\t\t\t{modal.ScientificName}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tDistribution :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{modal.Distribution}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tTypes :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{modal.Types}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tParts Used :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{modal.PartsUsed}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\tLocation :{\" \"}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t{modal.Location}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\tsx={{display:\"flex\",justifyContent:\"center\",width:\"100%\",pt:2,mt:2}}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tcount={(plantData?.length/15).toFixed(0)}\r\n\t\t\t\t\t\tonChange={(_,value) => {\r\n\t\t\t\t\t\t\tsetPage(value);\r\n\t\t\t\t\t\t\twindow.scroll(0,0);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\r\n\t\t\t<ScrollToTop\r\n\t\t\t\tsmooth\r\n\t\t\t\tstyle={style.scroll}\r\n\t\t\t\tcomponent=<KeyboardArrowUpIcon style={{ color: \"white\" }} />\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GetData;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useField } from \"formik\";\r\n\r\nconst TextfieldWrapper = ({ name, ...otherProps }) => {\r\n\tconst [field, meta] = useField(name);\r\n\r\n\tconst configTextField = {\r\n\t\t...field,\r\n\t\t...otherProps,\r\n\t\tfullWidth: true,\r\n\t\tvariant: 'outlined',\r\n\t};\r\n\r\n\tif (meta && meta.touched && meta.error) {\r\n\t\tconfigTextField.error = true;\r\n\t\tconfigTextField.helperText = meta.error;\r\n\t}\r\n\r\n\treturn <TextField {...configTextField} />;\r\n};\r\n\r\nexport default TextfieldWrapper;\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nconst ButtonWrapper = ({ children, ...otherProps }) => {\r\n\tconst { submitForm } = useFormikContext();\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tsubmitForm();\r\n\t};\r\n\r\n\r\n\tconst configButton = {\r\n\t\t...otherProps,\r\n\t\tvariant: 'contained',\r\n\t\tcolor:'primary',\r\n\t\tfullWidth: true,\r\n\t\tonClick: handleSubmit,\r\n\t\t\r\n\t};\r\n\r\n\treturn <Button {...configButton}>{children}</Button>;\r\n};\r\n\r\nexport default ButtonWrapper;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst footer = {\r\n\tbackgroundColor: \"rgb(0, 0, 0)\",\r\n\tposition: \"absolute\",\r\n\tmarginTop: \"1rem\",\r\n\twidth: \"100%\",\r\n\ttextAlign: \"center\",\r\n};\r\nconst para = {\r\n\tpadding: \"2rem\",\r\n\tcolor: \"white\",\r\n};\r\n\r\nconst Footer = () => {\r\n\tconst location = useLocation();\r\n\tconst path = location.pathname;\r\n\tconsole.log(\"path\", path);\r\n\r\n\treturn (\r\n\t\t\t\t<div style={footer}>\r\n\t\t\t\t\t<p style={para}>Made with ❤ by Nirmal, Adarsh & Neeraj</p>\r\n\t\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Textfield from \"../components/FormsUI/Textfield\";\r\nimport Button from \"../components/FormsUI/Button\";\r\nimport firebase from \"../firebase.js\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport theme from '../theme';\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Footer from '../components/Footer';\r\n\r\nconst INITIAL_FORM_STATE = {\r\n    ImgUrl: \"\",\r\n    LocalName: \"\",\r\n    ScientificName: \"\",\r\n    Distribution: \"\",\r\n    PartsUsed: \"\",\r\n    Uses: \"\",\r\n    Types: \"\",\r\n    Location: \"\",\r\n    Description: \"\",\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n    ImgUrl: Yup.string().required(\"required\"),\r\n    LocalName: Yup.string().min(3, \"Too Short!\").required(\"required\"),\r\n    ScientificName: Yup.string().min(3, \"Too Short!\").required(\"required\"),\r\n    Distribution: Yup.string().min(5, \"Too Short!\").required(\"required\"),\r\n    PartsUsed: Yup.string().min(5, \"Too Short!\").required(\"required\"),\r\n    Uses: Yup.string().min(300, \"Uses should be of minimum 50 words\").required(\"required\"),\r\n    Types: Yup.string().min(3, \"Too Short!\").required(\"required\"),\r\n    Location: Yup.string().min(4, \"Too Short!\").required(\"required\"),\r\n    Description: Yup.string()\r\n        .min(800, \"Description should be of minimum 100 words\")\r\n        .required(\"required\"),\r\n});\r\n\r\nconst notify = () => toast.success(\"Successfully added!\");\r\n\r\nconst handleAddPlant = (values, onSubmitProps) => {\r\n    const firestore = firebase.database().ref(\"/PlantDatabase\");\r\n    firestore.push(values);\r\n    // console.log(\"Form data\", values);\r\n    // console.log(\"Submit props\", onSubmitProps);\r\n    onSubmitProps.setSubmitting(false);\r\n    onSubmitProps.resetForm();\r\n    // window.location.reload();\r\n    notify();\r\n};\r\n\r\n\r\n\r\nconst AddSpecies = () => {\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                style={{ backgroundColor: theme.palette.primary.optional }}\r\n                disableGutters\r\n                maxWidth={false}\r\n            >\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{ flexGrow: 1, p: 2, boxShadow: 1, pt: 8 }}\r\n                    maxWidth={800}\r\n                    m=\"auto\"\r\n                    bgcolor=\"white\"\r\n                >\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        sx={{ flexGrow: 1 }}\r\n                        color=\"primary\"\r\n                    >\r\n                        Add New Species\r\n                    </Typography>\r\n                    <Divider sx={{pt:1}}/>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"text.primary\"\r\n                        sx={{\r\n                            py: 2,\r\n                            flexGrow: 1,\r\n                            display: { xs: \"none\", sm: \"block\" },\r\n                        }}\r\n                    >\r\n                        Discovered a new species?Add them below<span role=\"img\" aria-label=\"wink\">😉</span>\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"text.primary\"\r\n                        sx={{\r\n                            pb: 2,\r\n                            flexGrow: 1,\r\n                            display: { xs: \"block\", sm: \"none\" },\r\n                        }}\r\n                    >\r\n                        Discovered a new species?Add them below<span role=\"img\" aria-label=\"wink\">😉</span>\r\n                    </Typography>\r\n                    <Formik\r\n                        initialValues={{ ...INITIAL_FORM_STATE }}\r\n                        validationSchema={FORM_VALIDATION}\r\n                        onSubmit={(values, onSubmitProps) => {\r\n                            handleAddPlant(values, onSubmitProps);\r\n                        }}\r\n                    >\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        name=\"ImgUrl\"\r\n                                        label=\"Image URL\"\r\n                                        placeholder=\"The link to the image of the plant\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"LocalName\"\r\n                                        label=\"Local Name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"ScientificName\"\r\n                                        label=\"Scientific Name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"Distribution\"\r\n                                        label=\"Distribution\"\r\n                                        placeholder=\"eg. Lower hill, 900-4000ft\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"PartsUsed\"\r\n                                        label=\"Parts Used\"\r\n                                        placeholder=\"eg. roots, leaves, flower etc.\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        label=\"Uses\"\r\n                                        name=\"Uses\"\r\n                                        fullWidth\r\n                                        placeholder=\"Enter Uses here in 50-150 words\"\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"Types\"\r\n                                        label=\"Types\"\r\n                                        placeholder=\"eg. Herbs,Trees etc.\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"Location\"\r\n                                        fullWidth\r\n                                        label=\"Location\"\r\n                                        placeholder=\"eg. North, South, East, West\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        label=\"Description\"\r\n                                        name=\"Description\"\r\n                                        fullWidth\r\n                                        placeholder=\"Enter the Description here in 500-800 words.\"\r\n                                        multiline\r\n                                        rows={6}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button>Add</Button>\r\n                                    <ToastContainer position=\"bottom-center\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Formik>\r\n                </Box>\r\n            </Container>\r\n            <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddSpecies;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Textfield from \"../components/FormsUI/Textfield\";\r\nimport Button from \"../components/FormsUI/Button\";\r\nimport firebase from \"../firebase.js\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport theme from '../theme';\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Footer from '../components/Footer';\r\n\r\nconst INITIAL_FORM_STATE = {\r\n    FName: \"\",\r\n    LName: \"\",\r\n    Email: \"\",\r\n    Message: \"\",\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n    FName: Yup.string().min(3, \"Too Short!\").required(\"required\"),\r\n    LName: Yup.string().min(3, \"Too Short!\").required(\"required\"),\r\n    Email: Yup.string().email('Please enter a valid email').required(\"required\"),\r\n    Message: Yup.string().min(10, \"Too Short!\").required(\"required\"),\r\n});\r\n\r\nconst notify = () => toast.success(\"Successfully sent.\");\r\n\r\nconst handleSendMsg = (values, onSubmitProps) => {\r\n    const firestore = firebase.database().ref(\"/Contact\");\r\n    firestore.push(values);\r\n    // console.log(\"Form data\", values);\r\n    // console.log(\"Submit props\", onSubmitProps);\r\n    onSubmitProps.setSubmitting(false);\r\n    onSubmitProps.resetForm();\r\n    // window.location.reload();\r\n    notify();\r\n};\r\n\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                style={{ backgroundColor: theme.palette.primary.optional }}\r\n                disableGutters\r\n                maxWidth={false}\r\n            >\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{ flexGrow: 1, p: 2, boxShadow: 1, pt: 8 }}\r\n                    maxWidth={800}\r\n                    m=\"auto\"\r\n                    bgcolor=\"white\"\r\n                >\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        sx={{ flexGrow: 1 }}\r\n                        color=\"primary\"\r\n                    >\r\n                        Contact Us\r\n                    </Typography>\r\n                    <Divider>\r\n                        <Chip label=\"Get in Touch\" />\r\n                    </Divider>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"text.primary\"\r\n                        sx={{\r\n                            py: 2,\r\n                            flexGrow: 1,\r\n                            \r\n                        }}\r\n                    >\r\n                        We'd love to hear from you!\r\n                    </Typography>\r\n                    <Formik\r\n                        initialValues={{ ...INITIAL_FORM_STATE }}\r\n                        validationSchema={FORM_VALIDATION}\r\n                        onSubmit={(values, onSubmitProps) => {\r\n                            handleSendMsg(values, onSubmitProps);\r\n                        }}\r\n                    >\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"FName\"\r\n                                        label=\"First Name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Textfield\r\n                                        name=\"LName\"\r\n                                        label=\"Last Name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        name=\"Email\"\r\n                                        label=\"Email Address\"\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        name=\"Message\"\r\n                                        fullWidth\r\n                                        placeholder=\"Enter your message\"\r\n                                        multiline\r\n                                        rows={6}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button>Send</Button>\r\n                                    <ToastContainer position=\"bottom-center\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Formik>\r\n                </Box>\r\n            </Container>\r\n             <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","const devs = [\r\n\t{\r\n\t\tname: \"Nirmal Gupta\",\r\n\t\timg : \"https://firebasestorage.googleapis.com/v0/b/mpis-mini.appspot.com/o/ashu.jpg?alt=media&token=7ba949ed-3a10-4775-87d0-6119c04dc06c\",\r\n\t\tdescription: \"A Tech enthusiast and Gadgets lover yet a programming freak hailing from a small town of Sikkim i.e Jorethang. He holds a bachelor degree in Computer Applications and is currently pursuing MCA from Sikkim University.\",\r\n\t\tln : \"https://linkedin.com/in/nirmalgupta007\",\r\n\t\tgit : \"https://github.com/Aashu-007\",\r\n\t\tfb: \"https://facebook.com/nirmal.gupta.756\",\r\n\t\ttw: \"https://twitter.com/gupta10nirmal\",\r\n\t\tyt: \"https://youtube.com/TechSikkim\",\r\n\t},\r\n\t{\r\n\t\tname: \"Neeraj Anand\",\r\n\t\timg : \"https://firebasestorage.googleapis.com/v0/b/mpis-mini.appspot.com/o/neerajanand.jpg?alt=media&token=94703b8e-f9d8-4a0f-9ad2-f24043c95c98\",\r\n\t\tdescription: \"A passionate programmer with great problem solving skills from Patna. He holds a bachelor degree in Computer Application from Birla Institute of Technology Mesra and is currently pursuing a master in Computer Application from Sikkim University.\",\r\n\t\tln : \"https://www.linkedin.com/in/neeraj-anand-645002195/\",\r\n\t\tgit : \"https://github.com/Njanand-xenon\",\r\n\t\tfb: \"https://www.facebook.com/Njanand.xenon/\",\r\n\t\ttw: \"https://twitter.com/thenjanand\",\r\n\t\tyt: \" https://www.youtube.com/channel/UC79qVUGxwkLlTUIjmT-f7Sg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Adarsh Sharma\",\r\n\t\timg : \"https://firebasestorage.googleapis.com/v0/b/mpis-mini.appspot.com/o/adarsh.jpg?alt=media&token=a73feae0-b005-4997-a8d8-5efdd54a22c8\",\r\n\t\tdescription: \"A trainee software developer who also loves writing nepali poems, is from a small village Mungpoo, Darjeeling, he loves Riding. He holds a bachelor degree in Computer Applications and is currently pursuing MCA from Sikkim University.\",\r\n\t\tln : \"https://linkedin.com/in/adarsh-sharma-5b7b17227\",\r\n\t\tgit : \"https://github.com/AdarshSharma-Addu\",\r\n\t\tfb: \"https://facebook.com/profile.php?id=10000555760499\",\r\n\t\ttw: \"https://twitter.com/\",\r\n\t\tyt: \"https://youtube.com/channel/UCeCVByIWns9hCWCOO4P7JAg\",\r\n\t},\r\n];\r\n\r\nexport default devs;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport theme from \"../theme\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FacebookRoundedIcon from \"@mui/icons-material/FacebookRounded\";\r\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport devs from \"../devs\";\r\nimport Footer from '../components/Footer';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                style={{ backgroundColor: theme.palette.primary.optional }}\r\n                disableGutters\r\n                maxWidth={false}\r\n            >\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{ flexGrow: 1, p: 2, boxShadow: 1, pt: 8 }}\r\n                    maxWidth={800}\r\n                    m=\"auto\"\r\n                    bgcolor=\"white\"\r\n                >\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        sx={{ flexGrow: 1 }}\r\n                        color=\"primary\"\r\n                    >\r\n                        About\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Typography\r\n                        variant=\"body1\"\r\n                        sx={{ flexGrow: 1, mt: 3, mb: 4, textAlign: \"justify\" }}\r\n                        color=\"text.primary\"\r\n                    >\r\n                        Medicinal Plants Information System aka. MPIS is an\r\n                        information system for medicinal and aromatic plants\r\n                        that are found in the Northeastern state of India i.e\r\n                        Sikkim. Sikkim is bestowed with abundant medicinal and\r\n                        aromatic plants. More than 150 species of medicinal and\r\n                        aromatic plants are reported to be found in the state.\r\n                        Medicinal and Aromatic plants based on the web\r\n                        application is expected to help the public to find out\r\n                        the benefits and its locations .This application can\r\n                        raise public awareness about the importance of using\r\n                        herbs as medicine. Use of Medicinal plants cannot be\r\n                        separated from local livelihoods because they have been\r\n                        consuming and using it for a long time through local\r\n                        customs and knowledge.The usage of traditional remedies\r\n                        increases when conventional medicine is ineffective in\r\n                        the treatment of disease, such as in advanced cancer and\r\n                        in the face of new infectious diseases. \r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                    <span style={{fontWeight: \"bold\",fontSize: 18}}>Objectives</span>\r\n                    <ul>\r\n                        <li>To create\r\n                        maximum awareness among the common people about\r\n                        Medicinal Plants.</li>\r\n                        <li>This Information System will strengthen\r\n                        the knowledge and help researchers on Medicinal Plants\r\n                        in different Universities and Educational Institutions\r\n                        of states by providing an open information system.</li>\r\n                        <li>It\r\n                        will help the Medicinal practitioners and Botanists to\r\n                        find the herbs and medicines easily.People will come to\r\n                        know about the type and variety of plants location wise.</li>\r\n                    </ul>\r\n                     </Typography>\r\n                    <Divider>\r\n                        <Chip label=\"People Behind This Wonderful Project\" />\r\n                    </Divider>\r\n                    <Grid container spacing={3} sx={{ pt: 2 }}>\r\n                        {devs.map((data, index) => {\r\n                            return (\r\n                                <>\r\n                                    <Grid item xs={12} md={4} sm={6}>\r\n                                        <Card\r\n                                            sx={{\r\n                                                maxWidth: 340,\r\n                                                borderRadius: 5,\r\n                                                boxShadow: 3,\r\n                                            }}\r\n                                            raised\r\n                                        >\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                height=\"190\"\r\n                                                image={data.img}\r\n                                                alt={data.name}\r\n                                            />\r\n                                            <CardHeader\r\n                                                title={data.name}\r\n                                                sx={{ mb: -3 }}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography\r\n                                                    variant=\"body2\"\r\n                                                    color=\"text.secondary\"\r\n                                                    sx={{\r\n                                                        textAlign: \"justify\",\r\n                                                    }}\r\n                                                >\r\n                                                    {data.description}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <CardActions disableSpacing>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        window.open(\r\n                                                            data.ln,\r\n                                                            \"_blank\"\r\n                                                        );\r\n                                                    }}\r\n                                                    aria-label=\"follow on linkedin\"\r\n                                                >\r\n                                                    <LinkedInIcon\r\n                                                        sx={{\r\n                                                            color: \"#0e76a8\",\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        window.open(\r\n                                                            data.git,\r\n                                                            \"_blank\"\r\n                                                        );\r\n                                                    }}\r\n                                                    aria-label=\"follow on GitHub\"\r\n                                                >\r\n                                                    <GitHubIcon\r\n                                                        sx={{\r\n                                                            color: \"#171515\",\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        window.open(\r\n                                                            data.fb,\r\n                                                            \"_blank\"\r\n                                                        );\r\n                                                    }}\r\n                                                    aria-label=\"follow on facebook\"\r\n                                                >\r\n                                                    <FacebookRoundedIcon\r\n                                                        sx={{\r\n                                                            color: \"#3b5998\",\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        window.open(\r\n                                                            data.tw,\r\n                                                            \"_blank\"\r\n                                                        );\r\n                                                    }}\r\n                                                    aria-label=\"follow on twitter\"\r\n                                                >\r\n                                                    <TwitterIcon\r\n                                                        sx={{\r\n                                                            color: \"#00acee\",\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        window.open(\r\n                                                            data.yt,\r\n                                                            \"_blank\"\r\n                                                        );\r\n                                                    }}\r\n                                                    aria-label=\"subscribe on youtube\"\r\n                                                >\r\n                                                    <YouTubeIcon\r\n                                                        sx={{\r\n                                                            color: \"#c4302b\",\r\n                                                        }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n            <Footer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container sx={{ mt: \"30vh\" }}>\r\n\t\t\t\t<Box m=\"auto\" maxWidth={303} sx={{ flexGrow: 1 }}>\r\n\t\t\t\t<Typography variant=\"h1\" color=\"secondary\" style={{textAlign:\"center\"}}>\r\n\t\t\t\t404 \r\n\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\tpage not found! Seems like not a valid url.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: 'inherit',color:'inherit'}}>\r\n\t\t\t\t\t\t<Button fullWidth variant=\"outlined\" color=\"primary\">\r\n\t\t\t\t\t\t\tGo Back to Home\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ErrorPage;\r\n","import {useRef, useEffect} from 'react'\r\n\r\nconst useMounted = () => {\r\n\t\r\n\tconst mounted = useRef(false);\r\n\r\n\tuseEffect(() => {\r\n        mounted.current = true\r\n        return () => {\r\n        mounted.current=false\r\n    };\r\n    }, []);\r\n\r\n\treturn mounted\r\n}\r\n\r\nexport default useMounted","import React, {useState,useContext,useEffect} from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Textfield from \"../components/FormsUI/Textfield\";\r\nimport Button from \"../components/FormsUI/Button\";\r\nimport { auth } from \"../firebase.js\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport theme from \"../theme\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from '@mui/material/Alert'\r\nimport {useHistory} from 'react-router-dom'\r\nimport PersonAddAltRoundedIcon from '@mui/icons-material/PersonAddAltRounded';\r\nimport {AuthContext} from '../components/Authentication/AuthProvider'\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport useMounted from '../hooks/useMounted'\r\n\r\n\r\nconst INITIAL_FORM_STATE = {\r\n\temail: \"\",\r\n\tpassword: \"\",\r\n\tconfirmPassword: \"\",\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n\temail: Yup.string()\r\n\t\t.email(\"please enter a valid email\")\r\n\t\t.required(\"required\"),\r\n\tpassword: Yup.string()\r\n\t\t.min(8, \"password must be atleast 8 characters long\")\r\n\t\t.required(\"required\"),\r\n\tconfirmPassword: Yup.string().oneOf(\r\n\t\t[Yup.ref(\"password\"), null],\r\n\t\t\"Passwords must match\"\r\n\t),\r\n});\r\n\r\nconst Signup = () => {\r\n\r\n\tconst {user} = useContext(AuthContext);\r\n\tconst mounted = useMounted()\r\n\r\n\tconst [error, setError] = useState(\"\")\r\n\tconst [loading,setLoading] = useState(false);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst notify = () => toast.success(\"successfully registered.!\");\r\n\r\n\tconst handleSubmit = ({ email, password }, onSubmitProps) => {\r\n\t\t// console.log(email, password);\r\n\t\tsignup(email,password);\r\n\t\tonSubmitProps.resetForm();\r\n\t\t// console.log(onSubmitProps);\r\n\t\t\r\n\t};\r\n\r\n\tasync function signup(email,password){\r\n\ttry {\r\n\t\t\tsetError(\"\")\r\n            setLoading(true)\r\n\t\t\tawait auth.createUserWithEmailAndPassword(email, password).then((userCred) => {\r\n\t\t\t\tuserCred.user.sendEmailVerification();\r\n\t\t\t\tauth.signOut();\r\n\t\t\t\tsetError(\"email verification sent, please verify first and login\")\r\n\t\t\t\tnotify();\r\n\t\t\t});\r\n\t\t\t\r\n\r\n\t\t} catch (err) {\r\n\t\t\t// console.log(err.message)\r\n\t\t\tsetError(err.message)\r\n\t\t}\r\n\t\tif(mounted.current === true){\r\n            setLoading(false);\r\n        }\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(user && user.emailVerified){\r\n\t\t\thistory.push(\"/\")\r\n\t\t}\r\n\t}, [user,history])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container disableGutters maxWidth={false} sx={{ pt: 12 }}>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tcomponent=\"main\"\r\n\t\t\t\t\tsx={{ flexGrow: 1, p: 3, pt: 4 }}\r\n\t\t\t\t\tmaxWidth={300}\r\n\t\t\t\t\tm=\"auto\"\r\n\t\t\t\t\tborder={1}\r\n\t\t\t\t\tboxShadow={10}\r\n\t\t\t\t\tbgcolor=\"white\"\r\n\t\t\t\t\tborderColor={theme.palette.primary.main}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={{ ...INITIAL_FORM_STATE }}\r\n\t\t\t\t\t\tvalidationSchema={FORM_VALIDATION}\r\n\t\t\t\t\t\tonSubmit={(values, onSubmitProps) => {\r\n\t\t\t\t\t\t\thandleSubmit(values, onSubmitProps);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Form autoComplete=\"off\">\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h3\"\r\n\t\t\t\t\t\t\t\t\tsx={{ pl: 4, pt: 2 }}\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{error && <Alert severity=\"error\" sx={{mt:-3,mb:1}}>{error}</Alert>}\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                  <EmailIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                  <VisibilityIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                  <VisibilityIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button startIcon={<PersonAddAltRoundedIcon/>} disabled={loading}>Sign Up</Button>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t\tsx={{ float: \"right\", pt: 2 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAlready have an account?{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"green\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\tLogin.\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<ToastContainer position=\"bottom-center\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t\t<ToastContainer position=\"bottom-center\"/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Textfield from \"../components/FormsUI/Textfield\";\r\nimport Button from \"../components/FormsUI/Button\";\r\nimport { auth } from \"../firebase.js\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport theme from \"../theme\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LockRoundedIcon from \"@mui/icons-material/LockRounded\";\r\nimport { AuthContext } from \"../components/Authentication/AuthProvider\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport useMounted from '../hooks/useMounted'\r\nimport Divider from '@mui/material/Divider'\r\n\r\nconst INITIAL_FORM_STATE = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"please enter a valid email\")\r\n        .required(\"required\"),\r\n    password: Yup.string()\r\n        .min(8, \"password must be atleast 8 characters long\")\r\n        .required(\"required\"),\r\n});\r\n\r\nconst Login = () => {\r\n    \r\n    const { user } = useContext(AuthContext);\r\n\r\n    const mounted = useMounted()\r\n\r\n    const [error, setError] = useState(\"Login/SignUp to add new species\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const notify = () => toast.success(\"Login successful. Redirecting !\");\r\n\r\n    const handleSubmit = ({ email, password }, onSubmitProps) => {\r\n        console.log(email, password);\r\n        login(email, password);\r\n        // console.log(onSubmitProps);\r\n    };\r\n\r\n    async function login(email, password) {\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await auth.signInWithEmailAndPassword(email, password).then((userCred) => {\r\n                if (user.emailVerified === false) {\r\n                    userCred.user.sendEmailVerification();\r\n                    auth.signOut();\r\n                    setError(\"please verify your email to login\");\r\n                } else {\r\n                    notify();\r\n                    setTimeout(() => {\r\n                        history.push(\"/\");\r\n                    }, 3000);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            setError(\"email or password invalid.\");\r\n        }\r\n        if(mounted.current === true){\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.emailVerified) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [user, history]);\r\n\r\n    return (\r\n        <>\r\n            <Container disableGutters maxWidth={false} sx={{ pt: 15 }}>\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{ flexGrow: 1, p: 3, pt: 4 }}\r\n                    maxWidth={300}\r\n                    m=\"auto\"\r\n                    border={1}\r\n                    boxShadow={10}\r\n                    bgcolor=\"white\"\r\n                    borderColor={theme.palette.primary.main}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ ...INITIAL_FORM_STATE }}\r\n                        validationSchema={FORM_VALIDATION}\r\n                        onSubmit={(values, onSubmitProps) => {\r\n                            handleSubmit(values, onSubmitProps);\r\n                        }}\r\n                    >\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Typography\r\n                                    variant=\"h3\"\r\n                                    sx={{ pl: 4, pt: 2 }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    Login\r\n                                </Typography>\r\n                                <Grid item xs={12}>\r\n                                    {error && (\r\n                                        <Alert\r\n                                            severity=\"error\"\r\n                                            sx={{ mt: -3, mb: 1 }}\r\n                                        >\r\n                                            {error}\r\n                                        </Alert>\r\n                                    )}\r\n                                    <Textfield\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <EmailIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Textfield\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <VisibilityIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        startIcon={<LockRoundedIcon />}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"text.primary\"\r\n                                        sx={{ pt: 2,pb:1 }}\r\n                                    >\r\n                                     <Link\r\n                                            to=\"/forgotPswd\"\r\n                                            style={{ color: \"green\" }}\r\n                                        >\r\n                                              forgot password?\r\n                                        </Link>\r\n                                      \r\n                                    </Typography>\r\n                                    <Divider/>\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"text.primary\"\r\n                                        sx={{ float: \"right\",py:1 }}\r\n                                    >\r\n                                        Don't have an account?{\" \"}\r\n                                        <Link\r\n                                            to=\"/signup\"\r\n                                            style={{ color: \"green\" }}\r\n                                        >\r\n                                            {\" \"}\r\n                                            Sign Up.\r\n                                        </Link>\r\n                                    </Typography>\r\n                                    <ToastContainer position=\"bottom-center\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Formik>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n\tDocument,\r\n\tPage,\r\n\tText,\r\n\tImage,\r\n\tView,\r\n\tStyleSheet,\r\n} from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n\tpage: {\r\n\t\tpadding: \"40\",\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: \"45\",\r\n\t\tcolor: \"green\",\r\n\t\tmarginBottom: \"10\",\r\n\t},\r\n\tpara: {\r\n\t\tfontSize: \"13\",\r\n\t\tfontWeight: \"light\",\r\n\t},\r\n\tsubtitle: {\r\n\t\tfontSize: \"25\",\r\n\t\tcolor: \"green\",\r\n\t\tmarginTop: \"20\",\r\n\t\tmarginBottom: \"5\",\r\n\t},\r\n\timgBorder: {\r\n\t\tpadding: 2,\r\n\t},\r\n\tbox: {\r\n\t\tborder: 2,\r\n\t\tpadding: 5,\r\n\t\tmarginTop: 10,\r\n\t},\r\n\tdata: {\r\n\t\tfontSize: 18,\r\n\t\tcolor: \"green\",\r\n\t},\r\n});\r\n\r\nconst Doc = ({ plantData }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Document>\r\n\t\t\t\t<Page size=\"A4\" style={styles.page}>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text style={styles.title}>{plantData.LocalName}</Text>\r\n\t\t\t\t\t\t<View style={styles.imgBorder}>\r\n\t\t\t\t\t\t\t<Image src={plantData.ImgUrl} />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View style={styles.box}>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tLocal Name :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.LocalName}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tScientific Name :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.ScientificName}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tDistribution :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.Distribution}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tTypes :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.Types}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tPartsUsed :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.PartsUsed}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\tLocation :{\" \"}\r\n\t\t\t\t\t\t\t\t<Text style={styles.data}>\r\n\t\t\t\t\t\t\t\t\t{plantData.Location}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<Text style={styles.subtitle}>Description</Text>\r\n\t\t\t\t\t\t<Text style={styles.para}>{plantData.Description}</Text>\r\n\t\t\t\t\t\t<Text style={styles.subtitle}>Uses</Text>\r\n\t\t\t\t\t\t<Text style={styles.para}>{plantData.Uses}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Page>\r\n\t\t\t</Document>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Doc;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport theme from \"../theme\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport {useHistory} from 'react-router-dom'\r\nimport PictureAsPdfRoundedIcon from '@mui/icons-material/PictureAsPdfRounded';\r\nimport Doc from '../components/Doc';\r\n\r\nconst Plants = () => {\r\n\r\n\tconst [plantData, setPlantData] = useState({});\r\n\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst firestore = firebase.database().ref(`/PlantDatabase/${id}`);\r\n\t\tfirestore.get().then((snapshot) => {\r\n\t\t\tif (snapshot.exists()) {\r\n\t\t\t\tsetPlantData({ ...snapshot.val() });\r\n\t\t\t} else {\r\n\t\t\t\tsetPlantData({});\r\n\t\t\t}\r\n\t\t});\r\n\t}, [id]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tstyle={{ backgroundColor: theme.palette.primary.optional }}\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tmaxWidth={false}\r\n\t\t\t>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tcomponent=\"main\"\r\n\t\t\t\t\tsx={{ flexGrow: 1, p: 4, boxShadow: 1, pt: 10 }}\r\n\t\t\t\t\tm=\"auto\"\r\n\t\t\t\t\tmaxWidth={800}\r\n\t\t\t\t\tbgcolor=\"white\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tbgcolor={theme.palette.secondary.main}\r\n\t\t\t\t\t\tborderRadius={5}\r\n\t\t\t\t\t\tsx={{ position: \"fixed\", left: 4 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\thistory.goBack();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tsx={{ color: \"white\", backgroundColor: theme.palette.primary.main }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<KeyboardBackspaceIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography\r\n                        variant=\"h2\"\r\n                        sx={{ flexGrow: 1 }}\r\n                        color=\"primary\"\r\n                    >\r\n                        {plantData.LocalName}\r\n                        <PDFDownloadLink document={<Doc plantData={plantData}/>} filename=\"download.pdf\">\r\n                        <IconButton color=\"error\" sx={{fontSize:12,float:\"right\",display:{xs:\"none\",sm:\"block\"}}}>\r\n\t\t\t\t\t\t\t\t<PictureAsPdfRoundedIcon/><span style={{position:\"relative\",top:-8,left: 2}}>Download</span>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</PDFDownloadLink>\r\n\t\t\t\t\t\t<PDFDownloadLink document={<Doc plantData={plantData}/>} filename=\"download.pdf\">\r\n\t\t\t\t\t\t<IconButton color=\"error\" sx={{fontSize:12,float:\"right\",display:{xs:\"block\",sm:\"none\"}}}>\r\n\t\t\t\t\t\t\t\t<PictureAsPdfRoundedIcon/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</PDFDownloadLink>\r\n                    </Typography>\r\n                    <Divider sx={{pt:1}}/>\r\n\t\t\t\t\t<Grid container sx={{py:2}}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6}>\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\tmaxWidth: 300,\r\n\t\t\t\t\t\t\t\t\tminWidth: 200,\r\n\t\t\t\t\t\t\t\t\tborderRadius: 5,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"plant\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"300\"\r\n\t\t\t\t\t\t\t\t\t\timage={plantData.ImgUrl}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{objectFit:\"fill\"}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6}>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pt:3,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Local Name : {plantData.LocalName}</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Scientific Name : <span style={{fontStyle:\"italic\"}}>{plantData.ScientificName}</span></Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Types : {plantData.Types}</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Distribution : {plantData.Distribution}</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Parts Used : {plantData.PartsUsed}</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">Location : {plantData.Location}</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{fontSize: 20,pl:2}} variant=\"subtitle2\" color=\"text.secondary\">WikiLink : <a href={plantData.WikiLink} target=\"_blank\" rel=\"noopener noreferrer\">Visit</a></Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12}>\r\n\t\t\t\t\t\t\t<Typography color=\"primary\" sx={{pt:2,textAlign:'justify',fontWeight:'bold'}} variant=\"h6\">Description</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{textAlign:'justify', wordWrap:\"break-word\"}} variant=\"body1\">{plantData.Description}</Typography>\r\n\t\t\t\t\t\t\t<Typography color=\"primary\" sx={{pt:2,textAlign:'justify',fontWeight:'bold'}} variant=\"h6\">Uses</Typography>\r\n\t\t\t\t\t\t\t<Typography sx={{textAlign:'justify', wordWrap:\"break-word\"}} variant=\"body1\">{plantData.Uses}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Plants;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Textfield from \"../components/FormsUI/Textfield\";\r\nimport Button from \"../components/FormsUI/Button\";\r\nimport { auth } from \"../firebase.js\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport theme from \"../theme\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../components/Authentication/AuthProvider\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport useMounted from '../hooks/useMounted'\r\nimport Divider from '@mui/material/Divider'\r\n\r\nconst INITIAL_FORM_STATE = {\r\n    email: \"\",\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"please enter a valid email\")\r\n        .required(\"required\"),\r\n});\r\n\r\nconst ForgotPswd = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const mounted = useMounted()\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const notify = () => toast.success(\"Password reset link sent.\");\r\n\r\n    const handleSubmit = ({email}, onSubmitProps) => {\r\n        frgtPswd(email);\r\n    };\r\n\r\n    async function frgtPswd(email) {\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await auth.sendPasswordResetEmail(email,{url: 'https://aashu-007.github.io/MedicinalPlantsInformationSystem/login'}).then(res=>{\r\n                setError(\"A link to reset your password has been sent to your email\");\r\n                notify()\r\n            })\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            setError(\"There's no account with this email.\");\r\n        }\r\n        if(mounted.current === true){\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.emailVerified) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [user, history]);\r\n\r\n    return (\r\n        <>\r\n            <Container disableGutters maxWidth={false} sx={{ pt: 15 }}>\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{ flexGrow: 1, p: 3, pt: 4 }}\r\n                    maxWidth={300}\r\n                    m=\"auto\"\r\n                    border={1}\r\n                    boxShadow={10}\r\n                    bgcolor=\"white\"\r\n                    borderColor={theme.palette.primary.main}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ ...INITIAL_FORM_STATE }}\r\n                        validationSchema={FORM_VALIDATION}\r\n                        onSubmit={(values, onSubmitProps) => {\r\n                            handleSubmit(values, onSubmitProps);\r\n                        }}\r\n                    >\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Typography\r\n                                    variant=\"h3\"\r\n                                    sx={{ pl: 4, pt: 2,fontSize:35 }}\r\n                                    color=\"primary\"\r\n                                >\r\n                                    Forgot Password\r\n                                </Typography>\r\n                                <Grid item xs={12}>\r\n                                    {error && (\r\n                                        <Alert\r\n                                            severity=\"error\"\r\n                                            sx={{ mt: -3, mb: 1 }}\r\n                                        >\r\n                                            {error}\r\n                                        </Alert>\r\n                                    )}\r\n                                    <Textfield\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <EmailIcon />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <Divider sx={{pt:2}}>OR</Divider>\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        color=\"text.primary\"\r\n                                        sx={{ m:\"auto\",pt:1 ,textAlign:\"center\",fontSize:16}}\r\n                                    >\r\n                                        <Link\r\n                                            to=\"/login\"\r\n                                            style={{ color: \"green\",textDecoration:\"none\" }}\r\n                                        >\r\n                                            Login\r\n                                        </Link>\r\n                                    </Typography>\r\n                                    <ToastContainer position=\"bottom-center\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Formik>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPswd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LocationOnRoundedIcon from \"@mui/icons-material/LocationOnRounded\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport theme from \"../theme\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport grey from \"@mui/material/colors/grey\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport DataSearch from \"../DataSearch.json\";\r\n\r\nconst Search = () => {\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [modal, setModal] = useState({});\r\n\tconst history = useHistory();\r\n\tconst onOpenModal = (data) => {\r\n\t\tsetModal(data);\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst onCloseModal = () => setOpen(false);\r\n\r\n\tconst useQuery = () => {\r\n\t\treturn new URLSearchParams(useLocation().search);\r\n\t};\r\n\r\n\tlet Query = useQuery();\r\n\tlet search = Query.get(\"query\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst firestore = firebase.database().ref(\"/PlantDatabase\");\r\n\t\tfirestore\r\n\t\t\t.orderByChild(\"LocalName\")\r\n\t\t\t.equalTo(search)\r\n\t\t\t.on(\"value\", (snapshot) => {\r\n\t\t\t\tif (snapshot.val()) {\r\n\t\t\t\t\tconst data = snapshot.val();\r\n\t\t\t\t\tsetData(data);\r\n\t\t\t\t\t// console.log(\"data:\", data);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}, [search]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tsx={{ mx: 2, position: \"fixed\", zIndex: 999 }}\r\n\t\t\t\tmaxWidth=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Box bgcolor=\"white\" sx={{ pt: 10, mr: 3, pb: 1 }} m=\"auto\">\r\n\t\t\t\t\t<Searchbar data={DataSearch} placeholder=\"Search..\" />\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t\t<Container disableGutters maxWidth={false} sx={{ px: 5 }}>\r\n\t\t\t\t<Box sx={{ flexGrow: 1, p: 3, pt: 21 }} m=\"auto\">\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tmaxWidth=\"auto\"\r\n\t\t\t\t\t\tbgcolor={theme.palette.secondary.main}\r\n\t\t\t\t\t\tborderRadius={5}\r\n\t\t\t\t\t\tsx={{ position: \"fixed\", left: 3 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\thistory.goBack();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<KeyboardBackspaceIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{Object.keys(data).length === 0 ? (\r\n\t\t\t\t\t\t<Box m=\"auto\" sx={{ mt: \"30vh\", textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tsx={{ m: \"auto\", color: grey[500] }}\r\n\t\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNo search found with that name :{\" \"}\r\n\t\t\t\t\t\t\t\t{Query.get(\"query\")}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t{Object.keys(data).map((id, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: 275,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth: 150,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"plant\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"180\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={data[id].ImgUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data[id].LocalName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"relative\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttop: 4,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleft: -2,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LocationOnRoundedIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data[id].Location}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonOpenModal(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[id]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/plant/${id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"inherit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"inherit\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRead More\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t{open && setModal != null ? (\r\n\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\t\t\t\tonClose={onCloseModal}\r\n\t\t\t\t\t\t\t\t\tcenter\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t{modal.LocalName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tLocal Name :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{modal.LocalName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tScientific Name :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{fontStyle:\"italic\"}}>\r\n\t\t\t\t\t\t\t\t\t\t{modal.ScientificName}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tDistribution :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{modal.Distribution}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tTypes :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{modal.Types}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tParts Used :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{modal.PartsUsed}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.primary\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tLocation :{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{modal.Location}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n// import {Chart as ChartJS} from 'chart.js/auto'\r\n\r\nconst BarChart = ({chartData}) => {\r\n\r\n\tvar options={\r\n\t\tmaintainAspectRatio: true,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Bar data={chartData} options={options}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BarChart","import React from 'react'\r\nimport {Pie} from 'react-chartjs-2'\r\nimport {Chart as ChartJS} from 'chart.js/auto'\r\n\r\nconst PieChart = ({chartData}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Pie data={chartData}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PieChart","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n// import {Chart as ChartJS} from 'chart.js/auto'\r\n\r\nconst PieChart = ({chartData}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Line data={chartData}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PieChart","export const PlantLocationData = [\r\n\t{\r\n\t\t\"District\" : \"North\",\r\n\t\t\"NoOfPlants\" : \"53\"\r\n\t},\r\n\t{\r\n\t\t\"District\" : \"South\",\r\n\t\t\"NoOfPlants\" : \"103\"\r\n\t},\r\n\t{\r\n\t\t\"District\" : \"East\",\r\n\t\t\"NoOfPlants\" : \"119\"\r\n\t},\r\n\t{\r\n\t\t\"District\" : \"West\",\r\n\t\t\"NoOfPlants\" : \"125\"\r\n\t},\r\n]","export const PlantTypesData = [\r\n\t{\r\n\t\t\"Type\" : \"Herb\",\r\n\t\t\"Count\" : \"46\"\r\n\t},\r\n\t{\r\n\t\t\"Type\" : \"Creeper/Climber\",\r\n\t\t\"Count\" : \"23\"\r\n\t},\r\n\t{\r\n\t\t\"Type\" : \"Tree\",\r\n\t\t\"Count\" : \"50\"\r\n\t},\r\n\t{\r\n\t\t\"Type\" : \"Flower\",\r\n\t\t\"Count\" : \"6\"\r\n\t},\r\n\t{\r\n\t\t\"Type\" : \"Shrub\",\r\n\t\t\"Count\" : \"24\"\r\n\t},\r\n\t{\r\n\t\t\"Type\" : \"Fungus\",\r\n\t\t\"Count\" : \"1\"\r\n\t},\r\n]","export const PartsUsedData = [\r\n\t{\r\n\t\t\"Part\" : \"Fruits\",\r\n\t\t\"Count\" : \"34\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Leaves\",\r\n\t\t\"Count\" : \"101\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Stem\",\r\n\t\t\"Count\" : \"21\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Roots\",\r\n\t\t\"Count\" : \"107\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Seeds\",\r\n\t\t\"Count\" : \"39\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Flower\",\r\n\t\t\"Count\" : \"28\"\r\n\t},\r\n\t{\r\n\t\t\"Part\" : \"Barks\",\r\n\t\t\"Count\" : \"51\"\r\n\t},\r\n]","export const PlantHeightData = [\r\n\t{\r\n\t\t\"Height\" : \"0-500 m\",\r\n\t\t\"NoOfPlants\" : \"4\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"500-1000 m\",\r\n\t\t\"NoOfPlants\" : \"13\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"1000-1500 m\",\r\n\t\t\"NoOfPlants\" : \"34\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"1500-2000 m\",\r\n\t\t\"NoOfPlants\" : \"38\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"2000-2500 m\",\r\n\t\t\"NoOfPlants\" : \"12\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"2500-3000 m\",\r\n\t\t\"NoOfPlants\" : \"12\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"3000-3500 m\",\r\n\t\t\"NoOfPlants\" : \"10\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"3500-4000 m\",\r\n\t\t\"NoOfPlants\" : \"12\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"4000-4500 m\",\r\n\t\t\"NoOfPlants\" : \"9\"\r\n\t},\r\n\t{\r\n\t\t\"Height\" : \"4500-5000 m\",\r\n\t\t\"NoOfPlants\" : \"6\"\r\n\t},\r\n]","import React, { useState } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport BarChart from \"../components/Charts/BarChart\";\r\nimport PieChart from \"../components/Charts/PieChart\";\r\nimport LineChart from \"../components/Charts/LineChart\";\r\nimport { PlantLocationData } from \"../Data/PlantLocationData\";\r\nimport { PlantTypesData } from \"../Data/PlantTypesData\";\r\nimport { PartsUsedData } from \"../Data/PartsUsedData\";\r\nimport { PlantHeightData } from \"../Data/PlantHeightData\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport theme from \"../theme\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst [plantLocData, setPlantLocData] = useState({\r\n\t\tlabels: PlantLocationData.map((data) => data.District),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"No. of Plants\",\r\n\t\t\t\tdata: PlantLocationData.map((data) => data.NoOfPlants),\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\"rgba(255, 99, 132, 0.5)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 0.5)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 0.5)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 0.5)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t\t\"rgba(255,99,132,1)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 1)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 1)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 1)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst [plantTypeData, setPlantTypeData] = useState({\r\n\t\tlabels: PlantTypesData.map((data) => data.Type),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Total Count\",\r\n\t\t\t\tdata: PlantTypesData.map((data) => data.Count),\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\"rgba(255, 99, 132, 0.7)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 0.7)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 0.7)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 0.7)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 0.7)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 0.7)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t\t\"rgba(255,99,132,1)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 1)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 1)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 1)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 1)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 1)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst [partUsedData, setPartUsedData] = useState({\r\n\t\tlabels: PartsUsedData.map((data) => data.Part),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Total Count\",\r\n\t\t\t\tdata: PartsUsedData.map((data) => data.Count),\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\"rgba(255, 99, 132, 0.5)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 0.5)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 0.5)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 0.5)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 0.5)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 0.5)\",\r\n\t\t\t\t\t\"rgba(20, 25, 65, 0.5)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t\t\"rgba(255,99,132,1)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 1)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 1)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 1)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 1)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 1)\",\r\n\t\t\t\t\t\"rgba(20, 25, 65, 1)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst [plantHeightData, setPlantHeightData] = useState({\r\n\t\tlabels: PlantHeightData.map((data) => data.Height),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"No of Plants\",\r\n\t\t\t\tdata: PlantHeightData.map((data) => data.NoOfPlants),\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\"rgba(255, 99, 132, 0.5)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 0.5)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 0.5)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 0.5)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 0.5)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 0.5)\",\r\n\t\t\t\t\t\"rgba(20, 25, 65, 0.5)\",\r\n\t\t\t\t\t\"rgba(98, 151, 35, 0.5)\",\r\n\t\t\t\t\t\"rgba(19, 255, 239, 0.5)\",\r\n\t\t\t\t\t\"rgba(205, 251, 65, 0.5)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t\t\"rgba(255,99,132,1)\",\r\n\t\t\t\t\t\"rgba(54, 162, 235, 1)\",\r\n\t\t\t\t\t\"rgba(255, 206, 86, 1)\",\r\n\t\t\t\t\t\"rgba(153, 102, 255, 1)\",\r\n\t\t\t\t\t\"rgba(24, 101, 86, 1)\",\r\n\t\t\t\t\t\"rgba(100, 255, 100, 1)\",\r\n\t\t\t\t\t\"rgba(20, 25, 65, 1)\",\r\n\t\t\t\t\t\"rgba(98, 151, 35, 1)\",\r\n\t\t\t\t\t\"rgba(19, 255, 239, 1)\",\r\n\t\t\t\t\t\"rgba(205, 251, 65, 1)\",\r\n\t\t\t\t],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tstyle={{ backgroundColor: theme.palette.primary.optional }}\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tmaxWidth={false}\r\n\t\t\t>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tcomponent=\"main\"\r\n\t\t\t\t\tsx={{ flexGrow: 1, p: 2, boxShadow: 1, pt: 8,pb:5 }}\r\n\t\t\t\t\tmaxWidth=\"85%\"\r\n\t\t\t\t\tm=\"auto\"\r\n\t\t\t\t\tbgcolor=\"white\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tsx={{ textAlign: \"center\", py: 2 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOVERVIEW\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4} md={4}>\r\n\t\t\t\t\t\t\t<Paper sx={{boxShadow:3,height:\"100%\",backgroundColor:\"rgba(100, 255, 100, 0.1)\"}}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcolor=\"gray\"\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tsx={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLOCATION\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<PieChart chartData={plantLocData} />\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={8}>\r\n\t\t\t\t\t\t\t<Paper sx={{boxShadow:3,backgroundColor:\"rgba(255, 99, 132, 0.2)\"}}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcolor=\"gray\"\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tsx={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDISTRIBUTION\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<BarChart chartData={plantHeightData} />\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8} md={6}>\r\n\t\t\t\t\t\t\t<Paper sx={{boxShadow:3,backgroundColor:\"rgba(255, 206, 86, 0.3)\"}}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcolor=\"gray\"\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tsx={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tTYPES\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<LineChart chartData={plantTypeData} />\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={6} md={6}>\r\n\t\t\t\t\t\t\t<Paper sx={{boxShadow:3,backgroundColor:\"rgba(20, 25, 65, 0.1)\"}}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tcolor=\"gray\"\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tsx={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPARTS USED\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<BarChart chartData={partUsedData} />\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Box sx={{display:\"flex\",justifyContent:\"center\",mt:5}}>\r\n\t\t\t\t\t<Button size=\"large\" variant=\"outlined\" color=\"secondary\" onClick={()=>history.push(\"/explorespecies\")}>\r\n\t\t\t\t\t\tExplore Plants\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React,{ useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {AuthContext} from './AuthProvider'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...restProps }) => {\r\n\tconst { user } = useContext(AuthContext);\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...restProps}\r\n\t\t\trender={(...props) => {\r\n\t\t\t\treturn user && user.emailVerified ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to=\"/login\" />\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Drawer from \"./components/Drawer\";\nimport Explore from \"./components/Fetch\";\nimport AddSpecies from \"./pages/AddSpecies\";\nimport Contact from \"./pages/Contact\";\nimport About from \"./pages/About\";\nimport Error from \"./pages/ErrorPage\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Plants from './pages/Plants';\nimport forgotPswd from './pages/forgotPswd'\nimport Search from './components/Search'\nimport Dashboard from './pages/Dashboard'\nimport { Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./theme\";\nimport {AuthProvider} from './components/Authentication/AuthProvider';\nimport ProtectedRoute from './components/Authentication/ProtectedRoute'\n\nfunction App() {\n  return (\n    <>\n    \n      <ThemeProvider theme={theme}>\n        <AuthProvider>\n        <Drawer />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exaxt path=\"/explorespecies\" component={Explore}/>\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <ProtectedRoute exact path=\"/addspecies\" component={AddSpecies} />\n          <Route exact path=\"/plant/:id\" component={Plants} />\n          <Route exaxt path=\"/search\" component={Search}/>\n          <Route exaxt path=\"/signup\" component={Signup}/>\n          <Route exaxt path=\"/login\" component={Login}/>\n          <Route exaxt path=\"/forgotPswd\" component={forgotPswd}/>\n          <Route component={Error} />\n        </Switch>\n        </AuthProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <BrowserRouter basename=\"/MedicinalPlantsInformationSystem\">\n        <App />\n      </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}